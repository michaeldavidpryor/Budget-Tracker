{"version":3,"sources":["db.js"],"names":["db","request","indexedDB","open","onupgradeneeded","event","target","result","createObjectStore","autoIncrement","onsuccess","navigator","onLine","checkDatabase","onerror","console","log","errorCode","saveRecord","record","transaction","store","objectStore","add","getAll","length","fetch","method","body","JSON","stringify","headers","Accept","then","response","json","clear","window","addEventListener"],"mappings":"AAAA,IAAIA,EAAJ;AACA,IAAMC,OAAO,GAAGC,SAAS,CAACC,IAAV,CAAe,QAAf,EAAyB,CAAzB,CAAhB;;AAEAF,OAAO,CAACG,eAAR,GAA0B,UAASC,KAAT,EAAgB;AACxC,MAAML,EAAE,GAAGK,KAAK,CAACC,MAAN,CAAaC,MAAxB;AACAP,EAAAA,EAAE,CAACQ,iBAAH,CAAqB,SAArB,EAAgC;AAAEC,IAAAA,aAAa,EAAE;AAAjB,GAAhC;AACD,CAHD;;AAKAR,OAAO,CAACS,SAAR,GAAoB,UAASL,KAAT,EAAgB;AAClCL,EAAAA,EAAE,GAAGK,KAAK,CAACC,MAAN,CAAaC,MAAlB;;AAEA,MAAII,SAAS,CAACC,MAAd,EAAsB;AACpBC,IAAAA,aAAa;AACd;AACF,CAND;;AAQAZ,OAAO,CAACa,OAAR,GAAkB,UAAST,KAAT,EAAgB;AAChCU,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAYX,KAAK,CAACC,MAAN,CAAaW,SAArC;AACD,CAFD;;AAIA,SAASC,UAAT,CAAoBC,MAApB,EAA4B;AAC1B,MAAMC,WAAW,GAAGpB,EAAE,CAACoB,WAAH,CAAe,CAAC,SAAD,CAAf,EAA4B,WAA5B,CAApB;AAEA,MAAMC,KAAK,GAAGD,WAAW,CAACE,WAAZ,CAAwB,SAAxB,CAAd;AAEAD,EAAAA,KAAK,CAACE,GAAN,CAAUJ,MAAV;AACD;;AAED,SAASN,aAAT,GAAyB;AACvB,MAAMO,WAAW,GAAGpB,EAAE,CAACoB,WAAH,CAAe,CAAC,SAAD,CAAf,EAA4B,WAA5B,CAApB;AACA,MAAMC,KAAK,GAAGD,WAAW,CAACE,WAAZ,CAAwB,SAAxB,CAAd;AACA,MAAME,MAAM,GAAGH,KAAK,CAACG,MAAN,EAAf;;AAEAA,EAAAA,MAAM,CAACd,SAAP,GAAmB,YAAW;AAC5B,QAAIc,MAAM,CAACjB,MAAP,CAAckB,MAAd,GAAuB,CAA3B,EAA8B;AAC5BC,MAAAA,KAAK,CAAC,uBAAD,EAA0B;AAC7BC,QAAAA,MAAM,EAAE,MADqB;AAE7BC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,MAAM,CAACjB,MAAtB,CAFuB;AAG7BwB,QAAAA,OAAO,EAAE;AACPC,UAAAA,MAAM,EAAE,mCADD;AAEP,0BAAgB;AAFT;AAHoB,OAA1B,CAAL,CAQCC,IARD,CAQM,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,OARd,EASCF,IATD,CASM,YAAM;AACV,YAAMb,WAAW,GAAGpB,EAAE,CAACoB,WAAH,CAAe,CAAC,SAAD,CAAf,EAA4B,WAA5B,CAApB;AAEA,YAAMC,KAAK,GAAGD,WAAW,CAACE,WAAZ,CAAwB,SAAxB,CAAd;AAEAD,QAAAA,KAAK,CAACe,KAAN;AACD,OAfD;AAgBD;AACF,GAnBD;AAoBD;;AAEDC,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkCzB,aAAlC","file":"db.js","sourceRoot":"../public","sourcesContent":["let db;\nconst request = indexedDB.open(\"budget\", 1);\n\nrequest.onupgradeneeded = function(event) {\n  const db = event.target.result;\n  db.createObjectStore(\"pending\", { autoIncrement: true });\n};\n\nrequest.onsuccess = function(event) {\n  db = event.target.result;\n\n  if (navigator.onLine) {\n    checkDatabase();\n  }\n};\n\nrequest.onerror = function(event) {\n  console.log(\"Woops! \" + event.target.errorCode);\n};\n\nfunction saveRecord(record) {\n  const transaction = db.transaction([\"pending\"], \"readwrite\");\n\n  const store = transaction.objectStore(\"pending\");\n\n  store.add(record);\n}\n\nfunction checkDatabase() {\n  const transaction = db.transaction([\"pending\"], \"readwrite\");\n  const store = transaction.objectStore(\"pending\");\n  const getAll = store.getAll();\n\n  getAll.onsuccess = function() {\n    if (getAll.result.length > 0) {\n      fetch(\"/api/transaction/bulk\", {\n        method: \"POST\",\n        body: JSON.stringify(getAll.result),\n        headers: {\n          Accept: \"application/json, text/plain, */*\",\n          \"Content-Type\": \"application/json\"\n        }\n      })\n      .then(response => response.json())\n      .then(() => {\n        const transaction = db.transaction([\"pending\"], \"readwrite\");\n\n        const store = transaction.objectStore(\"pending\");\n\n        store.clear();\n      });\n    }\n  };\n}\n\nwindow.addEventListener(\"online\", checkDatabase);"]}