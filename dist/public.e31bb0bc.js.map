{"version":3,"sources":["index.js"],"names":["transactions","myChart","fetch","then","response","json","data","populateTotal","populateTable","populateChart","total","reduce","t","parseInt","value","totalEl","document","querySelector","textContent","tbody","innerHTML","forEach","transaction","tr","createElement","name","appendChild","reversed","slice","reverse","sum","labels","map","date","Date","getMonth","getDate","getFullYear","destroy","ctx","getElementById","getContext","Chart","type","datasets","label","fill","backgroundColor","sendTransaction","isAdding","nameEl","amountEl","errorEl","toISOString","unshift","method","body","JSON","stringify","headers","Accept","errors","catch","err","saveRecord","onclick"],"mappings":"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","file":"public.e31bb0bc.js","sourceRoot":"../public","sourcesContent":["let transactions = [];\nlet myChart;\n\nfetch(\"/api/transaction\")\n  .then(response => {\n    return response.json();\n  })\n  .then(data => {\n    // save db data on global variable\n    transactions = data;\n\n    populateTotal();\n    populateTable();\n    populateChart();\n  });\n\nfunction populateTotal() {\n  // reduce transaction amounts to a single total value\n  let total = transactions.reduce((total, t) => {\n    return total + parseInt(t.value);\n  }, 0);\n\n  let totalEl = document.querySelector(\"#total\");\n  totalEl.textContent = total;\n}\n\nfunction populateTable() {\n  let tbody = document.querySelector(\"#tbody\");\n  tbody.innerHTML = \"\";\n\n  transactions.forEach(transaction => {\n    // create and populate a table row\n    let tr = document.createElement(\"tr\");\n    tr.innerHTML = `\n      <td>${transaction.name}</td>\n      <td>${transaction.value}</td>\n    `;\n\n    tbody.appendChild(tr);\n  });\n}\n\nfunction populateChart() {\n  // copy array and reverse it\n  let reversed = transactions.slice().reverse();\n  let sum = 0;\n\n  // create date labels for chart\n  let labels = reversed.map(t => {\n    let date = new Date(t.date);\n    return `${date.getMonth() + 1}/${date.getDate()}/${date.getFullYear()}`;\n  });\n\n  // create incremental values for chart\n  let data = reversed.map(t => {\n    sum += parseInt(t.value);\n    return sum;\n  });\n\n  // remove old chart if it exists\n  if (myChart) {\n    myChart.destroy();\n  }\n\n  let ctx = document.getElementById(\"myChart\").getContext(\"2d\");\n\n  myChart = new Chart(ctx, {\n    type: 'line',\n      data: {\n        labels,\n        datasets: [{\n            label: \"Total Over Time\",\n            fill: true,\n            backgroundColor: \"#6666ff\",\n            data\n        }]\n    }\n  });\n}\n\nfunction sendTransaction(isAdding) {\n  let nameEl = document.querySelector(\"#t-name\");\n  let amountEl = document.querySelector(\"#t-amount\");\n  let errorEl = document.querySelector(\".form .error\");\n\n  // validate form\n  if (nameEl.value === \"\" || amountEl.value === \"\") {\n    errorEl.textContent = \"Missing Information\";\n    return;\n  }\n  else {\n    errorEl.textContent = \"\";\n  }\n\n  // create record\n  let transaction = {\n    name: nameEl.value,\n    value: amountEl.value,\n    date: new Date().toISOString()\n  };\n\n  // if subtracting funds, convert amount to negative number\n  if (!isAdding) {\n    transaction.value *= -1;\n  }\n\n  // add to beginning of current array of data\n  transactions.unshift(transaction);\n\n  // re-run logic to populate ui with new record\n  populateChart();\n  populateTable();\n  populateTotal();\n  \n  // also send to server\n  fetch(\"/api/transaction\", {\n    method: \"POST\",\n    body: JSON.stringify(transaction),\n    headers: {\n      Accept: \"application/json, text/plain, */*\",\n      \"Content-Type\": \"application/json\"\n    }\n  })\n  .then(response => {    \n    return response.json();\n  })\n  .then(data => {\n    if (data.errors) {\n      errorEl.textContent = \"Missing Information\";\n    }\n    else {\n      // clear form\n      nameEl.value = \"\";\n      amountEl.value = \"\";\n    }\n  })\n  .catch(err => {\n    // fetch failed, so save in indexed db\n    saveRecord(transaction);\n\n    // clear form\n    nameEl.value = \"\";\n    amountEl.value = \"\";\n  });\n}\n\ndocument.querySelector(\"#add-btn\").onclick = function() {\n  sendTransaction(true);\n};\n\ndocument.querySelector(\"#sub-btn\").onclick = function() {\n  sendTransaction(false);\n};\n"]}